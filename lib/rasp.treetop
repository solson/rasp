grammar Rasp
  rule program
    cell* <Program>
  end

  rule cell
    whitespace* (quotes / anonymous_func / number / string / symbol / list / vector) whitespace* <Cell>
  end

  rule quotes
    quoted_cell / backquoted_cell / unquoted_splicing_cell / unquoted_cell
  end

  rule quoted_cell
    "'" cell <QuotedCell>
  end

  rule backquoted_cell
    "`" cell <BackquotedCell>
  end

  rule unquoted_cell
    "~" cell <UnquotedCell>
  end

  rule unquoted_splicing_cell
    "~@" cell <UnquotedSplicingCell>
  end

  rule anonymous_func
    "#" list <AnonymousFunc>
  end

  rule number
    '-'? digit+ <Number>
  end

  rule symbol
    (special / letter) (special / letter / number)* <Symbol>
  end

  rule list
    '(' cell* ')' <List>
  end

  rule vector
    '[' cell* ']' <Vector>
  end

  rule string
    '"' ('\\"' / [^"])* '"' <String>
  end

  rule special
    [#!$%&*/:<=>?^_~+.@-]
  end

  rule letter
    [a-zA-Z]
  end

  rule digit
    [0-9]
  end

  rule whitespace
    # commas are whitespace, like in Clojure
    [,\t\n\v\f\r ] / comment
  end

  rule comment
    ';' (!"\n" .)* "\n"?
  end
end
